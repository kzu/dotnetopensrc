<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NMatrix.Schematron</name>
    </assembly>
    <members>
        <member name="T:NMatrix.Schematron.Formatters.BooleanFormatter">
            <summary>
            Provides a simple failure message, without any details of specific validation errors.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.Formatters.FormatterBase">
            <summary>
            Look at <see cref="T:NMatrix.Schematron.Formatters.IFormatter"/> documentation.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.Formatters.IFormatter">
            <summary>
            Interface for custom formatters, which are used to generate
            output from schema validation.
            </summary>
            <remarks>
            Provides formatting methods for Schematron specific elements and 
            for <see cref="T:System.Xml.Schema.XmlSchema"/> validation through the <see cref="T:System.Xml.XmlValidatingReader"/>.
            Custom formatters implement methods to provide message formatting.
            <p>
            Am abstract base implementation is provided in <see cref="T:NMatrix.Schematron.Formatters.FormatterBase"/> to ease
            the extending process.
            </p>
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Provides formatting of both <see cref="T:NMatrix.Schematron.Assert"/> and <see cref="T:NMatrix.Schematron.Report"/> elements.
            </summary>
            <remarks>
            Implementations may use the received context to add details to the output message.
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="context">The current navigator node where the test failed.</param>
            <param name="output">The message to output.</param>
            <param name="source">The <see cref="T:NMatrix.Schematron.Assert"/> or <see cref="T:NMatrix.Schematron.Report"/> element 
            which failed.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Rule,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Provides formatting for a <see cref="T:NMatrix.Schematron.Rule"/> element.
            </summary>
            <remarks>
            Implementations may use the received context to add details to the output message.
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="context">The navigator where the inner <see cref="T:NMatrix.Schematron.Assert"/> or 
            <see cref="T:NMatrix.Schematron.Report"/> elements failed.</param>
            <param name="output">The message to output.</param>
            <param name="source">The <see cref="T:NMatrix.Schematron.Rule"/> element containing failed 
            <see cref="T:NMatrix.Schematron.Assert"/> or <see cref="T:NMatrix.Schematron.Report"/> elements.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Pattern,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Provides formatting for a <see cref="T:NMatrix.Schematron.Pattern"/> element.
            </summary>
            <remarks>
            Implementations may use the received context to add details to the output message.
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="context">The source document navigator where evaluation took place.</param>
            <param name="output">The message to output.</param>
            <param name="source">The <see cref="T:NMatrix.Schematron.Pattern"/> element containing failed <see cref="T:NMatrix.Schematron.Rule"/> elements.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Phase,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Provides formatting for a <see cref="T:NMatrix.Schematron.Phase"/> element.
            </summary>
            <remarks>
            Implementations may use the received context to add details to the output message.
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="context">The source document navigator where evaluation took place.</param>
            <param name="output">The message to output.</param>
            <param name="source">The <see cref="T:NMatrix.Schematron.Phase"/> being evaluated.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Schema,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Provides formatting for a <see cref="T:NMatrix.Schematron.Schema"/> element.
            </summary>
            <remarks>
            Implementations may use the received context to add details to the output message.
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="context">The source document navigator where evaluation took place.</param>
            <param name="output">The message to output.</param>
            <param name="source">The <see cref="T:NMatrix.Schematron.Schema"/> being evaluated.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(System.Xml.XmlValidatingReader,System.Text.StringBuilder)">
            <summary>
            Provides formatting for a <see cref="T:System.Xml.Schema.XmlSchema"/> element being validated 
            through a <see cref="T:System.Xml.XmlValidatingReader"/>.
            </summary>
            <remarks>
            Usually will output schema-level formatting for XmlSchema validation. Recall that
            multiple schemas may have been configured with the reader and validated simultaneously.
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="output">The message to output.</param>
            <param name="reader">The reader in use to validate the schema.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(System.Xml.Schema.ValidationEventArgs,System.Text.StringBuilder)">
            <summary>
            Formats the output of XmlSchema validation.
            </summary>
            <remarks>
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="output">The message to output.</param>
            <param name="source">The argument received by the <see cref="T:System.Xml.Schema.ValidationEventHandler"/> handler
            during XmlSchema validation.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(System.Xml.Schema.XmlSchemaCollection,System.Text.StringBuilder)">
            <summary>
            Enclosing message for all schemas being validated.
            </summary>
            <remarks>
            Usually will add any enclosing message to the results of the global Xml validation.
            The <paramref name="output" /> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="output">The message to output.</param>
            <param name="schemas">The collection of schemas in use for validation.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.SchemaCollection,System.Text.StringBuilder)">
            <summary>
            Enclosing message for all schemas being validated.
            </summary>
            <remarks>
            Usually will add any enclosing message to the results of the global Schematron validation.
            The <paramref name="output" /> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="output">The message to output.</param>
            <param name="schemas">The collection of schemas in use for validation.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.IFormatter.Format(System.Text.StringBuilder)">
            <summary>
            Formats the whole message built so far.
            </summary>
            <remarks>
            Usually will perform any last-minute formatting of the whole message before
            being returned by the calling application. For example, the <see cref="T:NMatrix.Schematron.Formatters.XmlFormatter"/> 
            uses this method to enclose the whole message in an &lt;output&gt; element.
            The <paramref name="output"/> contains messages accumulated so far in the validation process.
            </remarks>
            <param name="output">The message to output.</param>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(NMatrix.Schematron.Rule,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(NMatrix.Schematron.Pattern,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(NMatrix.Schematron.Phase,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(NMatrix.Schematron.Schema,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(System.Xml.XmlValidatingReader,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(System.Xml.Schema.ValidationEventArgs,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(System.Xml.Schema.XmlSchemaCollection,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(NMatrix.Schematron.SchemaCollection,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormatterBase.Format(System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.BooleanFormatter.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Formatters.BooleanFormatter.Format(NMatrix.Schematron.Schema,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.Formatters.FormattingUtils">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormattingUtils.GetFullNodePosition(System.Xml.XPath.XPathNavigator,System.String,NMatrix.Schematron.Test)">
            <summary>
            Returns the full path to the context node. Clone the navigator to avoid loosing positioning.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormattingUtils.GetFullNodePosition(System.Xml.XPath.XPathNavigator,System.String,NMatrix.Schematron.Test,System.Collections.Hashtable)">
            <summary>
            Returns the full path to the context node. Clone the navigator to avoid loosing positioning.
            </summary>
            <remarks>
            Cloning is not performed inside this method because it is called recursively.
            Keeping positioning is only relevant to the calling procedure, not subsequent
            recursive calls. This way we avoid creating unnecessary objects.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormattingUtils.GetPositionInFile(System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            Returns line positioning information if supported by the XPathNavigator implementation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormattingUtils.GetNodeSummary(System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            Returns abreviated node information, including attribute values.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormattingUtils.GetNodeSummary(System.Xml.XPath.XPathNavigator,System.Collections.Hashtable,System.String)">
            <summary>
            Returns abreviated node information, including attribute values.
            </summary>
            <remarks>
            The namespaces param is optionally filled in <see cref="M:NMatrix.Schematron.Formatters.FormattingUtils.GetFullNodePosition(System.Xml.XPath.XPathNavigator,System.String,NMatrix.Schematron.Test)"/>.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormattingUtils.GetNamespaceSummary(System.Xml.XPath.XPathNavigator,System.Collections.Hashtable,System.String)">
            <summary>
            Outputs the xmlns declaration for each namespace found in the parameter.
            </summary>
        </member>
        <member name="F:NMatrix.Schematron.Formatters.FormattingUtils.XmlErrorPosition">
            <summary>
            Allows to match the string stating the node position from System.Xml error messages.
            </summary>
            <remarks>
            This regular expression is used to remove the node position from the validation error
            message, to maintain consistency with schematron messages.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.FormattingUtils.NormalizeString(System.String)">
            <summary>
            Returns a decoded string, with spaces trimmed.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.Formatters.LogFormatter">
            <summary>
            Provides a complete log of validation errors in text format.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.LogFormatter.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Formatters.LogFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.LogFormatter.Format(NMatrix.Schematron.Pattern,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.LogFormatter.Format(NMatrix.Schematron.Schema,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.LogFormatter.Format(System.Xml.Schema.ValidationEventArgs,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.LogFormatter.Format(System.Xml.Schema.XmlSchemaCollection,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.LogFormatter.Format(NMatrix.Schematron.SchemaCollection,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.Formatters.SimpleFormatter">
            <summary>
            Provides a simplified log of errors.
            </summary>
            <remarks>
            Similar output as <see cref="T:NMatrix.Schematron.Formatters.LogFormatter"/>, but doesn't provide 
            node position in file and namespace summary text.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.SimpleFormatter.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Formatters.SimpleFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.Formatters.XmlFormatter">
            <summary>
            Provides an Xml output from validation.
            </summary>
        </member>
        <member name="F:NMatrix.Schematron.Formatters.XmlFormatter.OutputNamespace">
            <summary>
            Namespace of generated output.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(NMatrix.Schematron.Rule,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(NMatrix.Schematron.Pattern,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(NMatrix.Schematron.Phase,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(NMatrix.Schematron.Schema,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(System.Xml.Schema.ValidationEventArgs,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(System.Xml.Schema.XmlSchemaCollection,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(NMatrix.Schematron.SchemaCollection,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(System.Xml.XmlValidatingReader,System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Formatters.XmlFormatter.Format(System.Text.StringBuilder)">
            <summary>
            Look at <see cref="M:NMatrix.Schematron.Formatters.IFormatter.Format(NMatrix.Schematron.Test,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)"/> documentation.
            </summary>
        </member>
        <member name="T:ThisAssembly">
            <summary>
            Contains assembly level documentation.
            </summary>
            <license>MPL1.1</license>
            <author id="dcazzulino" name="Daniel Cazzulino" email="nmatrixdotnet@msn.com">Project starter.</author>
            <link id="schematron" url="http://www.ascc.net/xml/resource/schematron/schematron2000.html">Schematron Specification</link>
        </member>
        <member name="T:NMatrix.Schematron.Assert">
            <summary>
            Represents an assert element of the Schematron schema.
            </summary>
            <remarks>
            As stated in the <link ref="schematron"/>, this is 
            the lowest element in a Schematron schema. This element contains the expression
            to execute in the context of its parent <see cref="T:NMatrix.Schematron.Rule"/>. 
            <para>If the results of the execution of the expression are <c>False</c>, the 
            assert fails and the correponding message will be displayed.</para>
            <para>
            Constructor is not public. To programatically create an instance of this
            class use the <see cref="M:NMatrix.Schematron.Rule.CreateAssert(System.String,System.String)"/> factory method.
            </para>
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="T:NMatrix.Schematron.Test">
            <summary>
            Base class for testing units of Schematron, such as Assert or Report elements.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.EvaluableExpression">
            <summary>
            Base class for elements that can be evaluated by an XPath expression.
            </summary>
            <remarks>
            This class performs the expression compilation, and provides
            access to the context through two methods. 
            </remarks>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="F:NMatrix.Schematron.EvaluableExpression._ret">
            <summary>
            Cache the return type to avoid cloning the expression.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.EvaluableExpression.#ctor(System.String)">
            <summary>Initializes a new instance of the element with the expression specified.</summary>
            <param name="xpathExpression">The expression to evaluate.</param>
        </member>
        <member name="M:NMatrix.Schematron.EvaluableExpression.#ctor">
            <summary>Initializes a new instance of the element.</summary>
        </member>
        <member name="M:NMatrix.Schematron.EvaluableExpression.InitializeExpression(System.String)">
            <summary>Reinitializes the element with a new expression, 
            after the class has already been constructed</summary>
            <param name="xpathExpression">The expression to evaluate.</param>
        </member>
        <member name="M:NMatrix.Schematron.EvaluableExpression.GetContext">
            <summary>Returns the manager in use to resolve expression namespaces.</summary>
        </member>
        <member name="M:NMatrix.Schematron.EvaluableExpression.SetContext(System.Xml.XmlNamespaceManager)">
            <summary>Sets the manager to use to resolve expression namespaces.</summary>
        </member>
        <member name="P:NMatrix.Schematron.EvaluableExpression.CompiledExpression">
            <summary>Contains the compiled version of the expression.</summary>
            <remarks>
            A clone of the expression is always returned, because the compiled
            expression is not thread-safe for evaluation.
            </remarks>
        </member>
        <member name="P:NMatrix.Schematron.EvaluableExpression.Expression">
            <summary>Contains the string version of the expression.</summary>
        </member>
        <member name="P:NMatrix.Schematron.EvaluableExpression.ReturnType">
            <summary>Contains the string version of the expression.</summary>
        </member>
        <member name="F:NMatrix.Schematron.Test._msg">
            <summary />
        </member>
        <member name="F:NMatrix.Schematron.Test._names">
            <summary />
        </member>
        <member name="F:NMatrix.Schematron.Test._paths">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Test.#ctor(System.String,System.String)">
            <summary />
            <param name="test"></param>
            <param name="message"></param>
        </member>
        <member name="P:NMatrix.Schematron.Test.Message">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Test.NameExpressions">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Test.NamePaths">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Assert.#ctor(System.String,System.String)">
            <summary>Constructs a new Assert object.</summary>
            <param name="test">XPath expression to test.</param>
            <param name="message">Message to display if the assert fails.</param>
        </member>
        <member name="T:NMatrix.Schematron.BadSchemaException">
            <summary>
            Represents the an error in the Schematron schema.
            </summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.BadSchemaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.BadSchemaException"/> class.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.BadSchemaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.BadSchemaException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:NMatrix.Schematron.BadSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.BadSchemaException"/> class.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:NMatrix.Schematron.BadSchemaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.BadSchemaException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:NMatrix.Schematron.CompiledExpressions">
            <summary>
            This class keeps static precompiled expressions used 
            in the Schematron schema loading and validation processes.
            </summary>
            <remarks>
            All expressions are compiled against the <see cref="P:NMatrix.Schematron.Config.DefaultNavigator"/>
            object. All the <see cref="T:System.Xml.XPath.XPathExpression"/> objects are initialized with
            the <see cref="P:NMatrix.Schematron.Config.DefaultNsManager"/> for schematron and XML Schema 
            namespaces resolution.
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="T:NMatrix.Schematron.Config">
            <summary>
            Provides global settings for Schematron validation.
            </summary>
            <remarks>
            This class is public to allow inheritors of Schematron elements
            to use these global settings.
            </remarks>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.Config.#cctor">
            <summary>
            Initializes global settings.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Config.Setup">
            <summary>
            Force all static constructors in the library.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.Config.DefaultFormatter">
            <summary>
            The default object to use to format messages from validation.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.Config.DefaultNavigator">
            <summary>
            A default empty navigator used to pre-compile XPath expressions.
            </summary>
            <remarks>
            Compiling <see cref="T:System.Xml.XPath.XPathExpression"/> doesn't involve any namespace, 
            name table or other specific processing. It's only a parsing procedure that
            builds the abstract syntax tree for later evaluation. So we can safely
            use an empty <see cref="T:System.Xml.XPath.XPathNavigator"/> to compile them against.
            </remarks>
            <example>
            <code>expr = Config.DefaultNavigator.Compile("//sch:pattern");
            other code;
            </code>
            <para>
            	<seealso cref="T:NMatrix.Schematron.CompiledExpressions"/>
            </para>
            </example>
        </member>
        <member name="P:NMatrix.Schematron.Config.DefaultNsManager">
            <summary>
            Manager to use when executing expressions that validate or
            load Schematron and Embedded Schematron schemas.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.Config.FullSchematron">
            <summary>
            A cached schema in Schematron format to validate schematron schemas.
            </summary>
            <remarks>This is the version for standalone schemas.</remarks>
        </member>
        <member name="P:NMatrix.Schematron.Config.EmbeddedSchematron">
            <summary>
            A cached schema in Schematron format to validate schematron schemas.
            </summary>
            <remarks>This is the version for embedded schemas.</remarks>
        </member>
        <member name="P:NMatrix.Schematron.Config.UniqueKey">
            <summary>
            A unique identifier to use for internal keys.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.DomMatchedNodes">
            <summary>
            Strategy class for matching and keeping references to nodes in an xml document.
            </summary>
            <remarks>
            When an <see cref="T:System.Xml.XPath.XPathNavigator"/> is created from an <see cref="T:System.Xml.XmlDocument"/>,
            it implements the <see cref="T:System.Xml.IHasXmlNode"/> interface, which is used to gain
            access to the underlying node.
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="T:NMatrix.Schematron.IMatchedNodes">
            <summary>
            Defines the common interface used by the different node-matching strategies.
            </summary>
            <remarks>
            As different <see cref="T:System.Xml.XPath.XPathNavigator"/> can exist, and even be developed
            in the future, we have to take into account that the data store can change.
            So in order to be efficient at keeping nodes matched so far, to satisfy the 
            <link ref="schematron"/>, we provide a common interface and an 
            implementation optimized for specific stores. 
            <para>
            Each navigator implementation typically provides an interface to let 
            applications get access to the underlying store, such as the <see cref="T:System.Xml.IHasXmlNode"/> 
            or <see cref="T:System.Xml.IXmlLineInfo"/> interfaces, implemented in navigators create by 
            <see cref="T:System.Xml.XmlDocument"/> or <see cref="T:System.Xml.XPath.XPathDocument"/> classes.
            </para>
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="M:NMatrix.Schematron.IMatchedNodes.IsMatched(System.Xml.XPath.XPathNavigator)">
            <summary>Checks if an specific node has already been matched.</summary>
            <param name="node">The node to check.</param>
        </member>
        <member name="M:NMatrix.Schematron.IMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)">
            <summary>Adds a node to the list of nodes matched so far.</summary>
            <param name="node">The node to add.</param>
        </member>
        <member name="M:NMatrix.Schematron.IMatchedNodes.Clear">
            <summary>Clears the list of matched nodes.</summary>
        </member>
        <member name="F:NMatrix.Schematron.DomMatchedNodes._matched">
            <summary>
            We use an optimized collection for saving the hash codes.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.DomMatchedNodes.#ctor">
            <summary>Initializes an instance of the class.</summary>
        </member>
        <member name="M:NMatrix.Schematron.DomMatchedNodes.IsMatched(System.Xml.XPath.XPathNavigator)">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.IsMatched(System.Xml.XPath.XPathNavigator)"/>.</summary>
        </member>
        <member name="M:NMatrix.Schematron.DomMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)"/>.</summary>
        </member>
        <member name="M:NMatrix.Schematron.DomMatchedNodes.Clear">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.Clear"/>.</summary>
        </member>
        <member name="T:NMatrix.Schematron.EvaluationContextBase">
            <summary>
            Base class for Schematron evaluation contexts.
            </summary>
            <remarks>
            The schematron elements don't provide evaluation code. They just
            represent the elements in the <link ref="schematron"/>.
            <para>
            For evaluation purposes, this class provides the iteration and execution
            process, accumulates results, moves the cursor, etc. Here is where the 
            actual evaluation takes place. This way we isolate the schema design
            from the different execution models we can use, for example, 
            <see cref="T:NMatrix.Schematron.SyncEvaluationContext"/> (we may add asynchonous execution later).
            </para>
            <para>
            The validator classes provided use instances of this strategy object to 
            validate documents provided by the user.
            </para>
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="F:NMatrix.Schematron.EvaluationContextBase.Matched">
            <summary>
            Keeps a list of nodes already matched.
            </summary>
            <remarks>
            When the <seealso cref="P:NMatrix.Schematron.EvaluationContextBase.Source"/> property is set, the appropriate
            strategy for matching nodes is initialized, depending on the specific
            implementation of the <see cref="T:System.Xml.XPath.XPathNavigator"/> in use.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.EvaluationContextBase.#ctor">
            <summary>Creates the evaluation context</summary>
        </member>
        <member name="M:NMatrix.Schematron.EvaluationContextBase.Start">
            <summary>
            Starts the evaluation process.
            </summary>
            <remarks>
            When the process is finished, the results are placed 
            in the <seealso cref="P:NMatrix.Schematron.EvaluationContextBase.Messages"/> property.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.EvaluationContextBase.Reset">
            <summary>
            Resets the state of the current context.
            </summary>
            <remarks>
            By default, it clears the <see cref="P:NMatrix.Schematron.EvaluationContextBase.Messages"/> and sets <see cref="P:NMatrix.Schematron.EvaluationContextBase.HasErrors"/> to false.
            </remarks>
        </member>
        <member name="P:NMatrix.Schematron.EvaluationContextBase.Formatter">
            <summary>Gets or sets the class to use to format messages.</summary>
            <remarks>
            This object is initialized to the <see cref="P:NMatrix.Schematron.Config.DefaultFormatter"/> instance.
            Usually, it will be changed based on parameters passed to the validator class,
            or exposed directly by it.
            </remarks>
        </member>
        <member name="P:NMatrix.Schematron.EvaluationContextBase.Messages">
            <summary>Gets or sets the messages generated by the validation process.</summary>
            <remarks>
            Specific implementations of this class read/write this property 
            while they accumulate validation messages.
            </remarks>
        </member>
        <member name="P:NMatrix.Schematron.EvaluationContextBase.HasErrors">
            <summary>Indicates if errors were found during the current evaluation.</summary>
        </member>
        <member name="P:NMatrix.Schematron.EvaluationContextBase.Phase">
            <summary>Gets or sets the specific validation phase to run.</summary>
            <remarks>
            Schematron supports the concept of phases, where different sets of 
            patterns can be executed at different times. This phase is initialized
            to <see cref="F:System.String.Empty"/>, which will mean all patterns are run.
            </remarks>
        </member>
        <member name="P:NMatrix.Schematron.EvaluationContextBase.Schema">
            <summary>Gets or sets the schema to use for the validation.</summary>
        </member>
        <member name="P:NMatrix.Schematron.EvaluationContextBase.Source">
            <summary>Gets or sets the document to validate.</summary>
            <remarks>
            When this property is set, the appropriate <see cref="T:NMatrix.Schematron.IMatchedNodes"/>
            strategy is picked, to perform optimum for various navigator implementations.
            </remarks>
        </member>
        <member name="T:NMatrix.Schematron.GenericMatchedNodes">
            <summary>
            Strategy class for matching and keeping references to nodes in 
            an unknown implementation of <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <remarks>
            This implementation uses the standard <see cref="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)"/> 
            to know if a navigator has already been matched. This is not optimum because
            a complete traversal of nodes matched so far has to be performed, but it will
            work with all implementations of <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="F:NMatrix.Schematron.GenericMatchedNodes._matched">
            <summary>
            Uses a simple arraylist to keep the navigators.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.GenericMatchedNodes.#ctor">
            <summary>Initializes an instance of the class.</summary>
        </member>
        <member name="M:NMatrix.Schematron.GenericMatchedNodes.IsMatched(System.Xml.XPath.XPathNavigator)">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.IsMatched(System.Xml.XPath.XPathNavigator)"/>.</summary>
        </member>
        <member name="M:NMatrix.Schematron.GenericMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)"/>.</summary>
        </member>
        <member name="M:NMatrix.Schematron.GenericMatchedNodes.Clear">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.Clear"/>.</summary>
        </member>
        <member name="T:NMatrix.Schematron.Int32Collection">
            <summary>
            An optimized collection for holding <see cref="T:System.Int32"/> values.
            </summary>
            <author ref="dcazzulino">
            This class was generated automatically by TextBox. 
            Original author is Shawn Van Ness. The code contains comments by 
            him, together with a summary of features and acknowledgments :).
            </author>
            <progress amount="100"/>
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.#ctor(NMatrix.Schematron.Int32Collection)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.#ctor(System.Int32[])">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.CopyTo(System.Int32[])">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.CopyTo(System.Int32[],System.Int32)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Add(System.Int32)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Clear">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Contains(System.Int32)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.IndexOf(System.Int32)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Insert(System.Int32,System.Int32)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Remove(System.Int32)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.RemoveAt(System.Int32)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.GetEnumerator">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.AddRange(NMatrix.Schematron.Int32Collection)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.AddRange(System.Int32[])">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Int32Collection.Count">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Int32Collection.Item(System.Int32)">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Int32Collection.Capacity">
            <summary />
        </member>
        <member name="T:NMatrix.Schematron.Int32Collection.Enumerator">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Enumerator.#ctor(NMatrix.Schematron.Int32Collection)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Enumerator.MoveNext">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Int32Collection.Enumerator.Reset">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Int32Collection.Enumerator.Current">
            <summary />
        </member>
        <member name="T:NMatrix.Schematron.InvalidExpressionException">
            <summary>
            The exception that is thrown when an invalid XPath expression is used.
            </summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.InvalidExpressionException.#ctor">
            <summary>Initializes a new instance of the exception class.</summary>
        </member>
        <member name="M:NMatrix.Schematron.InvalidExpressionException.#ctor(System.String)">
            <summary>
            Initializes an instance of the class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:NMatrix.Schematron.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            For serialization purposes.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:NMatrix.Schematron.InvalidExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an instance of the class with a specified error message
            and a reference to the inner exception that is the cause for this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:NMatrix.Schematron.NavigableType">
            <summary>
            Return type to use as the validation result.
            </summary>
        </member>
        <member name="F:NMatrix.Schematron.NavigableType.XmlDocument">
            <summary>
            Use an <see cref="F:NMatrix.Schematron.NavigableType.XmlDocument"/> for validation and return type.
            </summary>
        </member>
        <member name="F:NMatrix.Schematron.NavigableType.XPathDocument">
            <summary>
            Use an <see cref="F:NMatrix.Schematron.NavigableType.XPathDocument"/> for validation and return type.
            </summary>
        </member>
        <member name="F:NMatrix.Schematron.NavigableType.Default">
            <summary>
            Use the default type, equal to <see cref="F:NMatrix.Schematron.NavigableType.XPathDocument"/>, for validation and return type.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.OutputFormatting">
            <summary>
            Represents the valid output formats.
            </summary>
            <remarks>
            Items will be added to the list to reflect the 
            additional <see cref="T:NMatrix.Schematron.Formatters.IFormatter"/> implementations we 
            will develop.
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="F:NMatrix.Schematron.OutputFormatting.Boolean">
            <summary>Use the <see cref="T:NMatrix.Schematron.Formatters.BooleanFormatter"/> class.</summary>
        </member>
        <member name="F:NMatrix.Schematron.OutputFormatting.Log">
            <summary>Use the <see cref="T:NMatrix.Schematron.Formatters.LogFormatter"/> class.</summary>
        </member>
        <member name="F:NMatrix.Schematron.OutputFormatting.Simple">
            <summary>Use the <see cref="T:NMatrix.Schematron.Formatters.SimpleFormatter"/> class.</summary>
        </member>
        <member name="F:NMatrix.Schematron.OutputFormatting.Default">
            <summary>Use the default formatter, which is the <see cref="F:NMatrix.Schematron.OutputFormatting.Log"/>.</summary>
        </member>
        <member name="F:NMatrix.Schematron.OutputFormatting.XML">
            <summary>Use the <see cref="T:NMatrix.Schematron.Formatters.XmlFormatter"/> class.</summary>
        </member>
        <member name="T:NMatrix.Schematron.Pattern">
            <summary>
            A Pattern element, containing <see cref="T:NMatrix.Schematron.Rule"/> elements.
            </summary>
            <remarks>
            Constructor is not public. To programatically create an instance of this
            class use the <see cref="M:NMatrix.Schematron.Phase.CreatePattern(System.String,System.String)"/> factory method.
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="M:NMatrix.Schematron.Pattern.#ctor(System.String)">
            <summary>Initializes the pattern with the name specified.</summary>
            <param name="name">The name of the new pattern.</param>
        </member>
        <member name="M:NMatrix.Schematron.Pattern.#ctor(System.String,System.String)">
            <summary>Initializes the pattern with the name and id specified.</summary>
            <param name="name">The name of the new pattern.</param>
            <param name="id">The id of the new pattern.</param>
        </member>
        <member name="M:NMatrix.Schematron.Pattern.CreateRule">
            <summary>Creates a new rule instance.</summary>
            <remarks>
            Inheritors should override this method to create instances
            of their own rule implementations.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Pattern.CreateRule(System.String)">
            <summary>Creates a new rule instance with the context specified.</summary>
            <remarks>
            Inheritors should override this method to create instances
            of their own rule implementations.
            </remarks>
            <param name="context">
            The context for the new rule. <see cref="P:NMatrix.Schematron.Rule.Context"/>
            </param>
        </member>
        <member name="P:NMatrix.Schematron.Pattern.Name">
            <summary>Gets or sets the pattern's name.</summary>
        </member>
        <member name="P:NMatrix.Schematron.Pattern.Id">
            <summary>Gets or sets the pattern's Id.</summary>
            <remarks>
            This property is important because it is used by the 
            <see cref="T:NMatrix.Schematron.Phase"/> to activate certain patterns.
            </remarks>
        </member>
        <member name="P:NMatrix.Schematron.Pattern.Rules">
            <summary>Gets the rules contained in this pattern.</summary>
        </member>
        <member name="T:NMatrix.Schematron.PatternCollection">
            <summary>A collection of Pattern elements.</summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.Add(NMatrix.Schematron.Pattern)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.AddRange(NMatrix.Schematron.Pattern[])">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.AddRange(NMatrix.Schematron.PatternCollection)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.Contains(NMatrix.Schematron.Pattern)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.CopyTo(NMatrix.Schematron.Pattern[],System.Int32)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.IndexOf(NMatrix.Schematron.Pattern)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.Insert(System.Int32,NMatrix.Schematron.Pattern)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PatternCollection.Remove(NMatrix.Schematron.Pattern)">
            <summary></summary>
        </member>
        <member name="P:NMatrix.Schematron.PatternCollection.Item(System.Int32)">
            <summary>Returns the Pattern element at the specified position.</summary>
        </member>
        <member name="T:NMatrix.Schematron.Phase">
            <summary>
            A Phase element, containing the active <see cref="T:NMatrix.Schematron.Pattern"/> elements.
            </summary>
            <remarks>
            The <link ref="schematron"/> allows a certaing degree of workflow
            through the use of phases. A document can have several states, and 
            therefore different sets of rules should be checked against it. 
            <para>
            This element allows execution of a set of 'active' patterns.
            </para>
            <para>
            Constructor is not public. To programatically create an instance of this
            class use the <see cref="M:NMatrix.Schematron.Schema.CreatePhase(System.String)"/> factory method.
            </para>
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="F:NMatrix.Schematron.Phase.All">
            <summary>
            The identifier to check for All phases.
            </summary>
            <remarks>Causes all the patterns in a schema to be checked, 
            irrespective of the phases where they are activated.</remarks>
        </member>
        <member name="M:NMatrix.Schematron.Phase.#ctor(System.String)">
            <summary>Initializes a new instance of the class with the specified Id.</summary>
            <param name="id">The Id of the new phase.</param>
        </member>
        <member name="M:NMatrix.Schematron.Phase.#ctor">
            <summary>Initializes a new instance of the class.</summary>
        </member>
        <member name="M:NMatrix.Schematron.Phase.CreatePattern(System.String,System.String)">
            <summary>Creates a new pattern instance.</summary>
            <remarks>
            Inheritors should override this method to create instances
            of their own pattern implementations.
            </remarks>
            <param name="name">The name of the new pattern.</param>
            <param name="id">The unique identifier of the new pattern.</param>
        </member>
        <member name="M:NMatrix.Schematron.Phase.CreatePattern(System.String)">
            <summary>Creates a new pattern instance.</summary>
            <remarks>
            This method calls the overloaded version passing a default
            <see cref="F:System.String.Empty"/> value for the pattern's id.
            Inheritors can override this method if they want to provide
            a different default value.
            </remarks>
            <param name="name">The name of the new pattern.</param>
        </member>
        <member name="P:NMatrix.Schematron.Phase.Id">
            <summary>Gets or sets the phase identifier.</summary>
        </member>
        <member name="P:NMatrix.Schematron.Phase.Patterns">
            <summary>Gets the collection of child <see cref="T:NMatrix.Schematron.Pattern"/> elements.</summary>
        </member>
        <member name="T:NMatrix.Schematron.PhaseCollection">
            <summary>A collection of Phase elements</summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.PhaseCollection.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.PhaseCollection.Add(NMatrix.Schematron.Phase)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PhaseCollection.AddRange(NMatrix.Schematron.Phase[])">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PhaseCollection.AddRange(NMatrix.Schematron.PhaseCollection)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PhaseCollection.Contains(System.String)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.PhaseCollection.Remove(NMatrix.Schematron.Phase)">
            <summary></summary>
        </member>
        <member name="P:NMatrix.Schematron.PhaseCollection.Item(System.String)">
            <summary>Required indexer.</summary>
        </member>
        <member name="T:NMatrix.Schematron.Report">
            <summary>
            A Report element.
            </summary>
            <remarks>
            As stated in the <link ref="schematron"/>, this is the other
            lowest element (aside from <see cref="T:NMatrix.Schematron.Assert"/>) in a Schematron schema. 
            This element contains the expression
            to execute in the context of its parent <see cref="T:NMatrix.Schematron.Rule"/>. 
            <para>If the results of the execution of the expression are <c>true</c>, the 
            report succeeds and the correponding message will be displayed.</para>
            <para>
            Constructor is not public. To programatically create an instance of this
            class use the <see cref="M:NMatrix.Schematron.Rule.CreateAssert(System.String,System.String)"/> factory method.
            </para>
            </remarks>
            <author ref="dcazzulino"/>
            <progress amount="100"/>
        </member>
        <member name="M:NMatrix.Schematron.Report.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the class with the parameters specified.</summary>
            <param name="test">The XPath expression to test.</param>
            <param name="message">The message to return.</param>
        </member>
        <member name="T:NMatrix.Schematron.Rule">
            <summary>
            A Rule element.
            </summary>
            <remarks>
            Rules enclose the <see cref="T:NMatrix.Schematron.Assert"/> and <see cref="T:NMatrix.Schematron.Report"/> 
            elements, providing the context for their evaluation. 
            According to the <link ref="schematron"/>, nodes can be evaluated
            by only one rule inside a <see cref="T:NMatrix.Schematron.Pattern"/>, so typical schema 
            design includes placing the most exceptional rules first, down to 
            more generally applicable ones.
            <para>
            Constructor is not public. To programatically create an instance of this
            class use the <see cref="M:NMatrix.Schematron.Pattern.CreateRule"/> factory method.
            </para>
            </remarks>
            <author ref="dcazzulino">
            Should we add support for the key element? <link ref="schematron"/>
            </author>
            <progress amount="100"/>
        </member>
        <member name="M:NMatrix.Schematron.Rule.#ctor">
            <summary>
            Creates an abstract rule, without context.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Rule.#ctor(System.String)">
            <summary>Initializes a new instance of the class, with the received context.</summary>
            <param name="context">The rule's context to evaluate.</param>
            <remarks>If passed a null or an <see cref="F:System.String.Empty"/>, this is implicitly an abstract rule.</remarks>
        </member>
        <member name="M:NMatrix.Schematron.Rule.InitContext(System.String)">
            <summary>Initializes the context for the rule.</summary>
            <param name="context">The rule's context to evaluate.</param>
            <remarks>
            If passed a null or an <see cref="F:System.String.Empty"/>, this is implicitly an abstract rule.
            </remarks>
            <author ref="dcazzulino">
            Rules are evaluated through all the document (//), unless they 
            explicitly want to start from the root (/). This is consistent
            with XSLT template match behavior. So we have to split the expression
            per union (|) to add the root expression in these cases.
            </author>
        </member>
        <member name="M:NMatrix.Schematron.Rule.CreateAssert(System.String,System.String)">
            <summary>Creates a new assert instance.</summary>
            <remarks>
            Inheritors should override this method to create instances
            of their own assert implementations.
            </remarks>
            <param name="test">
            The XPath expression to test for the assert. See 
            <see cref="P:NMatrix.Schematron.EvaluableExpression.Expression"/>.
            </param>
            <param name="message">
            The message to display if the assert fails. See
            <see cref="P:NMatrix.Schematron.Test.Message"/>.
            </param>
        </member>
        <member name="M:NMatrix.Schematron.Rule.CreateReport(System.String,System.String)">
            <summary>Creates a new report instance.</summary>
            <remarks>
            Inheritors should override this method to create instances
            of their own report implementations.
            </remarks>
            <param name="test">
            The XPath expression to test for the report. See 
            <see cref="P:NMatrix.Schematron.EvaluableExpression.Expression"/>.
            </param>
            <param name="message">
            The message to display if the report succeeds. See
            <see cref="P:NMatrix.Schematron.Test.Message"/>.
            </param>
        </member>
        <member name="M:NMatrix.Schematron.Rule.AddAssert(System.String,System.String)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Rule.AddReport(System.String,System.String)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Rule.Extend(NMatrix.Schematron.Rule)">
            <summary/>
            <param name="parent"></param>
            <exception cref="T:System.InvalidOperationException">Only abstract rules can be used as a base for extensions.</exception>
        </member>
        <member name="P:NMatrix.Schematron.Rule.Id">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Rule.Context">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Rule.IsAbstract">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Rule.Asserts">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Rule.Reports">
            <summary />
        </member>
        <member name="T:NMatrix.Schematron.RuleCollection">
            <summary>A collection of Rule elements.</summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.Add(NMatrix.Schematron.Rule)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.AddRange(NMatrix.Schematron.Rule[])">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.AddRange(NMatrix.Schematron.RuleCollection)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.Contains(NMatrix.Schematron.Rule)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.CopyTo(NMatrix.Schematron.Rule[],System.Int32)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.IndexOf(NMatrix.Schematron.Rule)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.Insert(System.Int32,NMatrix.Schematron.Rule)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.RuleCollection.Remove(NMatrix.Schematron.Rule)">
            <summary></summary>
        </member>
        <member name="P:NMatrix.Schematron.RuleCollection.Item(System.Int32)">
            <summary>Returns the Rule element at the specified position.</summary>
        </member>
        <member name="T:NMatrix.Schematron.Schema">
            <summary>
            </summary>
            <author ref="dcazzulino" />
            <progress amount="100">Lacks attributes defined in Schematron, but not in use currently.</progress>
        </member>
        <member name="F:NMatrix.Schematron.Schema.Namespace">
            <summary>
            The Schematron namespace.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Schema.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Schema.#ctor(System.String)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Schema.CreateLoader">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Schema.CreatePhase(System.String)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Schema.CreatePhase">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.Schema.Load(System.String)">
            <summary>
            Loads the schema from the specified URI.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Schema.Load(System.IO.TextReader)">
            <summary>
            Loads the schema from the reader. Closing the reader is responsibility of the caller.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Schema.Load(System.IO.Stream)">
            <summary>
            Loads the schema from the stream. Closing the stream is responsibility of the caller.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Schema.Load(System.Xml.XmlReader)">
            <summary>
            Loads the schema from the reader. Closing the reader is responsibility of the caller.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Schema.Load(System.Xml.XPath.XPathNavigator)">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Schema.Loader">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Schema.DefaultPhase">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Schema.Title">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Schema.Phases">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Schema.Patterns">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Schema.NsManager">
            <summary />
        </member>
        <member name="T:NMatrix.Schematron.SchemaCollection">
            <summary>A collection of schematron schemas.</summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.Add(NMatrix.Schematron.Schema)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.AddRange(NMatrix.Schematron.Schema[])">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.AddRange(NMatrix.Schematron.SchemaCollection)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.Contains(NMatrix.Schematron.Schema)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.CopyTo(NMatrix.Schematron.Schema[],System.Int32)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.IndexOf(NMatrix.Schematron.Schema)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.Insert(System.Int32,NMatrix.Schematron.Schema)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.SchemaCollection.Remove(NMatrix.Schematron.Schema)">
            <summary></summary>
        </member>
        <member name="P:NMatrix.Schematron.SchemaCollection.Item(System.Int32)">
            <summary>Returns the Schema element at the specified position.</summary>
        </member>
        <member name="T:NMatrix.Schematron.SchemaLoader">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.SchemaLoader.#ctor(NMatrix.Schematron.Schema)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.SchemaLoader.LoadSchema(System.Xml.XPath.XPathNavigator)">
            <summary />
            <param name="source"></param>
        </member>
        <member name="T:NMatrix.Schematron.StartDelegate">
            <summary />
        </member>
        <member name="T:NMatrix.Schematron.SyncEvaluationContext">
            <summary>
            Evaluates all the schema elements synchronously.
            </summary>
            <authorref id="dcazzulino"/>
            <progress amount="100"/>
            <remarks>
            See <see cref="T:NMatrix.Schematron.EvaluationContextBase"/> for a description of the purpose and 
            of evaluation contexts, and where are they used.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.SyncEvaluationContext.#ctor">
            <summary>Creates the evaluation context</summary>
        </member>
        <member name="M:NMatrix.Schematron.SyncEvaluationContext.Start">
            <summary>
            Starts the evaluation process.
            </summary>
            <remarks>
            When the process is finished, the results are placed 
            in the <see cref="P:NMatrix.Schematron.EvaluationContextBase.Messages"/> property.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.SyncEvaluationContext.Evaluate(NMatrix.Schematron.Phase,System.Text.StringBuilder)">
            <summary>
            Evaluates the selected <see cref="T:NMatrix.Schematron.Phase"/>.
            </summary>
            <remarks>
            As most of the other evaluation methods, it repositions the 
            <see cref="P:NMatrix.Schematron.EvaluationContextBase.Source"/> navigator on the root node.
            </remarks>
            <param name="phase">The <see cref="T:NMatrix.Schematron.Phase"/> to evaluate.</param>
            <param name="output">Contains the builder to accumulate messages in.</param>
            <returns>A boolean indicating the presence of errors (true).</returns>
        </member>
        <member name="M:NMatrix.Schematron.SyncEvaluationContext.Evaluate(NMatrix.Schematron.Pattern,System.Text.StringBuilder)">
            <summary>
            Evaluates the selected <see cref="T:NMatrix.Schematron.Pattern"/>.
            </summary>
            <remarks>
            As most of the other evaluation methods, it repositions the 
            <see cref="P:NMatrix.Schematron.EvaluationContextBase.Source"/> navigator on the root node.
            <para>
            Clears the <see cref="F:NMatrix.Schematron.EvaluationContextBase.Matched"/> object before
            proceeding, as the restriction about node mathing (see <linkref id="schematron"/>)
            applies only inside a single pattern.
            </para>
            </remarks>
            <param name="pattern">The <see cref="T:NMatrix.Schematron.Pattern"/> to evaluate.</param>
            <param name="output">Contains the builder to accumulate messages in.</param>
            <returns>A boolean indicating if a new message was added.</returns>
        </member>
        <member name="M:NMatrix.Schematron.SyncEvaluationContext.Evaluate(NMatrix.Schematron.Rule,System.Text.StringBuilder)">
            <summary>
            Evaluates the selected <see cref="T:NMatrix.Schematron.Rule"/>.
            </summary>
            <remarks>
            <see cref="P:NMatrix.Schematron.Rule.Asserts"/> and <see cref="P:NMatrix.Schematron.Rule.Reports"/> are iterated
            and each <see cref="T:NMatrix.Schematron.Assert"/> and <see cref="T:NMatrix.Schematron.Report"/> is executed against
            the context selected by the <see cref="P:NMatrix.Schematron.Rule.Context"/>.
            <para>
            Nodes matched are added to the <see cref="F:NMatrix.Schematron.EvaluationContextBase.Matched"/> list of 
            nodes to skip in the next rule, using the <see cref="M:NMatrix.Schematron.IMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)"/> method.
            This object is a strategy object which implements different algorithms for matching and 
            saving node references, as the actual <see cref="T:System.Xml.XPath.XPathNavigator"/> implementation provides
            different methods for accessing the underlying source. 
            <para>
            This makes the implementation both performant and compliant with
            the restriction about node mathing (see <linkref id="schematron"/>) in the spec.
            </para>
            <para>
            	<seealso cref="T:NMatrix.Schematron.DomMatchedNodes"/>
            	<seealso cref="T:NMatrix.Schematron.XPathMatchedNodes"/>
            	<seealso cref="T:NMatrix.Schematron.GenericMatchedNodes"/>
            </para>
            As most of the other evaluation methods, it repositions the 
            <see cref="P:NMatrix.Schematron.EvaluationContextBase.Source"/> navigator on the root node.
            </para>
            </remarks>
            <param name="rule">The <see cref="T:NMatrix.Schematron.Rule"/> to evaluate.</param>
            <param name="output">Contains the builder to accumulate messages in.</param>
            <returns>A boolean indicating if a new message was added.</returns>
            <exception cref="T:System.InvalidOperationException">
            The rule to evaluate is abstract (see <see cref="P:NMatrix.Schematron.Rule.IsAbstract"/>).
            </exception>
        </member>
        <member name="M:NMatrix.Schematron.SyncEvaluationContext.EvaluateAssert(NMatrix.Schematron.Assert,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Performs the evaluation of the <see cref="T:NMatrix.Schematron.Assert"/>.
            </summary>
            <remarks>
            This is where the actual assert expression is evaluated. If
            the <see cref="P:NMatrix.Schematron.EvaluableExpression.Expression"/> returns false, 
            a formated message is generated from the <see cref="P:NMatrix.Schematron.Test.Message"/> property.
            </remarks>
            <param name="assert">The <see cref="T:NMatrix.Schematron.Assert"/> to evaluate.</param>
            <param name="context">The context node for the execution.</param>
            <param name="output">Contains the builder to accumulate messages in.</param>
            <returns>A boolean indicating if a new message was added.</returns>
        </member>
        <member name="M:NMatrix.Schematron.SyncEvaluationContext.EvaluateReport(NMatrix.Schematron.Report,System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
            <summary>
            Performs the evaluation of the <see cref="T:NMatrix.Schematron.Report"/>.
            </summary>
            <remarks>
            This is where the actual report expression is evaluated. If
            the <see cref="P:NMatrix.Schematron.EvaluableExpression.Expression"/> returns true, 
            a formated message is generated from the <see cref="P:NMatrix.Schematron.Test.Message"/> property.
            </remarks>
            <param name="report">The <see cref="T:NMatrix.Schematron.Report"/> to evaluate.</param>
            <param name="context">The context node for the execution.</param>
            <param name="output">Contains the builder to accumulate messages in.</param>
            <returns>A boolean indicating if a new message was added.</returns>
        </member>
        <member name="T:NMatrix.Schematron.TagExpressions">
            <summary />
        </member>
        <member name="F:NMatrix.Schematron.TagExpressions.Name">
            <summary>
            The compiled regular expression to replace the special <c>name</c> tag inside a message.
            </summary>
            <remarks>
            Replaces each instance of <c>name</c> tags with the value un the current context element.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.TagExpressions.#cctor">
            <summary />
        </member>
        <member name="T:NMatrix.Schematron.TestCollection">
            <summary>A collection of Test elements.</summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.#ctor">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.Add(NMatrix.Schematron.Test)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.AddRange(NMatrix.Schematron.Test[])">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.AddRange(NMatrix.Schematron.TestCollection)">
            <summary />
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.Contains(NMatrix.Schematron.Test)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.CopyTo(NMatrix.Schematron.Test[],System.Int32)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.IndexOf(NMatrix.Schematron.Test)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.Insert(System.Int32,NMatrix.Schematron.Test)">
            <summary></summary>
        </member>
        <member name="M:NMatrix.Schematron.TestCollection.Remove(NMatrix.Schematron.Test)">
            <summary></summary>
        </member>
        <member name="P:NMatrix.Schematron.TestCollection.Item(System.Int32)">
            <summary>Returns the Test element at the specified position.</summary>
        </member>
        <member name="T:NMatrix.Schematron.ValidationAttribute">
            <summary>
            Attribute applied to webmethods that require Schematron validation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.ValidationAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute for a certain schema.
            </summary>
            <param name="schema">The schema to validate the webmethod with.</param>
        </member>
        <member name="M:NMatrix.Schematron.ValidationAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute for a certain schema.
            </summary>
            <param name="schemas">The set of schemas to validate the webmethod with.</param>
        </member>
        <member name="M:NMatrix.Schematron.ValidationAttribute.#ctor(System.String,NMatrix.Schematron.OutputFormatting)">
            <summary>
            Initializes the attribute for a certain schema.
            </summary>
            <param name="schema">The schema to validate the webmethod with.</param>
            <param name="formatting">The formatting to use for the validation output.</param>
        </member>
        <member name="M:NMatrix.Schematron.ValidationAttribute.#ctor(System.String[],NMatrix.Schematron.OutputFormatting)">
            <summary>
            Initializes the attribute for a certain schema.
            </summary>
            <param name="schemas">The set of schemas to validate the webmethod with.</param>
            <param name="formatting">The formatting to use for the validation output.</param>
        </member>
        <member name="P:NMatrix.Schematron.ValidationAttribute.Schemas">
            <summary>
            Gets the location of the schemas to use.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.ValidationAttribute.Phase">
            <summary>
            Gets/Sets the phase to use for validation.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.ValidationAttribute.Formatting">
            <summary>
            Gets/Sets the formatting to use for validation errors.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.ValidationAttribute.FormattingType">
            <summary>
            Gets/Sets a type that implements <see cref="!:Formatting.IFormatter"/> to use 
            to format error messages. If set, this property takes precedence 
            over <see cref="P:NMatrix.Schematron.ValidationAttribute.Formatting"/>.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.ValidationAttribute.ExtensionType">
            <summary>
            Gets the type of this extension attribute, which is always 
            <see cref="T:NMatrix.Schematron.ValidationExtension"/>.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.ValidationAttribute.Priority">
            <summary>
            Gets/Sets the priority of the extension.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.ValidationException">
            <summary>
            Represents the an error in the Schematron schema.
            </summary>
            <author ref="dcazzulino" />
            <progress amount="100" />
        </member>
        <member name="M:NMatrix.Schematron.ValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.ValidationException"/> class.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.ValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.ValidationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:NMatrix.Schematron.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.ValidationException"/> class.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:NMatrix.Schematron.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NMatrix.Schematron.ValidationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:NMatrix.Schematron.ValidationExtension">
            <summary>
            Extension that allows Schematron validation on webmethods.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.Validator">
            <summary>
            Performs validation of Schematron elements and schemas.
            </summary>
            <remarks>
            Can handle either standalone or embedded schematron schemas. If the schematron
            is embedded in an XML Schema, the input document is validated against both at
            the same time.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Validator.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.#ctor(NMatrix.Schematron.OutputFormatting)">
            <summary>
            Initializes a new instance of the class, using the specified output format for error messages.
            </summary>
            <param name="format">Output format of error messages.</param>
        </member>
        <member name="M:NMatrix.Schematron.Validator.#ctor(NMatrix.Schematron.NavigableType)">
            <summary>
            Initializes a new instance of the class, using the specified return type.
            </summary>
            <param name="type">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> type to use for validation and return type.</param>
        </member>
        <member name="M:NMatrix.Schematron.Validator.#ctor(NMatrix.Schematron.OutputFormatting,NMatrix.Schematron.NavigableType)">
            <summary>
            Initializes a new instance of the class, using the specified options.
            </summary>
            <param name="format">Output format of error messages.</param>
            <param name="type">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> type to use for validation and return type.</param>
        </member>
        <member name="M:NMatrix.Schematron.Validator.InitValidator(NMatrix.Schematron.OutputFormatting,NMatrix.Schematron.NavigableType)">
            <summary>
            Initializes the validator with the options received from the constructor overloads.
            </summary>
            <param name="format">Output format of error messages.</param>
            <param name="type">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> type to use for validation and return type.</param>
        </member>
        <member name="M:NMatrix.Schematron.Validator.CreateContext">
            <summary>Creates the evaluation context to use.</summary>
            <remarks>
            Inheritors can override this method should they want to 
            use a different strategy for node traversal and evaluation
            against the source file.
            </remarks>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchema(System.Xml.Schema.XmlSchema)">
            <summary>
            Adds an XML Schema to the collection to use for validation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchema(NMatrix.Schematron.Schema)">
            <summary>
            Adds a Schematron schema to the collection to use for validation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchemas(System.Xml.Schema.XmlSchemaCollection)">
            <summary>
            Adds a set of XML Schemas to the collection to use for validation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchemas(NMatrix.Schematron.SchemaCollection)">
            <summary>
            Adds a set of Schematron schemas to the collection to use for validation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchema(System.String)">
            <summary>
            Adds a schema to the collection to use for validation from the specified URL.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchema(System.IO.TextReader)">
            <summary>
            Adds a schema to the collection to use for validation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchema(System.IO.Stream)">
            <summary>
            Adds a schema to the collection to use for validation.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.Validator.AddSchema(System.Xml.XmlReader)">
            <summary>
            Adds a schema to the collection to use for validation.
            </summary>
            <remarks>Processing takes place here.</remarks>
        </member>
        <member name="M:NMatrix.Schematron.Validator.ValidateSchematron(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Performs Schematron-only validation.
            </summary>
            <remarks>
            Even when <see cref="T:System.Xml.XmlDocument"/> implements IXPathNavigable, WXS
            validation can't be performed once it has been loaded becasue a 
            validating reader has to be used.
            </remarks>
            <exception cref="T:NMatrix.Schematron.ValidationException">
            The document is invalid with respect to the loaded schemas.
            </exception>
        </member>
        <member name="M:NMatrix.Schematron.Validator.ValidateSchematron(System.Xml.XPath.XPathNavigator)">
            <summary>
            Performs Schematron-only validation.
            </summary>
            <exception cref="T:NMatrix.Schematron.ValidationException">
            The document is invalid with respect to the loaded schemas.
            </exception>
        </member>
        <member name="M:NMatrix.Schematron.Validator.Validate(System.String)">
            <summary>Performs validation of the document at the specified URI.</summary>
            <param name="uri">The document location.</param>
            <exception cref="T:NMatrix.Schematron.ValidationException">
            The document is invalid with respect to the loaded schemas.
            </exception>
            <returns>The loaded <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance.</returns>
        </member>
        <member name="M:NMatrix.Schematron.Validator.Validate(System.IO.TextReader)">
            <summary>Performs validation of the document using the specified reader.</summary>
            <param name="reader">The reader pointing to the document to validate.</param>
            <returns>The loaded <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance.</returns>
            <exception cref="T:NMatrix.Schematron.ValidationException">
            The document is invalid with respect to the loaded schemas.
            </exception>
            <returns>The loaded <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance.</returns>
        </member>
        <member name="M:NMatrix.Schematron.Validator.Validate(System.IO.Stream)">
            <summary>Performs validation of the document using the specified stream.</summary>
            <param name="input">The stream with the document to validate.</param>
            <exception cref="T:NMatrix.Schematron.ValidationException">
            The document is invalid with respect to the loaded schemas.
            </exception>
            <returns>The loaded <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance.</returns>
        </member>
        <member name="M:NMatrix.Schematron.Validator.Validate(System.Xml.XmlReader)">
            <summary>Performs validation of the document using the received reader.</summary>
            <remarks>Where the actual work takes place</remarks>
            <param name="reader">The reader pointing to the document to validate.</param>
            <exception cref="T:NMatrix.Schematron.ValidationException">
            The document is invalid with respect to the loaded schemas.
            </exception>
            <returns>The loaded <see cref="T:System.Xml.XPath.IXPathNavigable"/> instance.</returns>
        </member>
        <member name="P:NMatrix.Schematron.Validator.Context">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Validator.Formatter">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Validator.ReturnType">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Validator.Phase">
            <summary />
        </member>
        <member name="P:NMatrix.Schematron.Validator.Schemas">
            <summary>
            Exposes the schematron schemas to use for validation.
            </summary>
        </member>
        <member name="P:NMatrix.Schematron.Validator.XmlSchemas">
            <summary>
            Exposes the XML schemas to use for validation.
            </summary>
        </member>
        <member name="T:NMatrix.Schematron.XPathMatchedNodes">
            <summary>
            Strategy class for matching and keeping references to nodes in an <see cref="T:System.Xml.XPath.XPathDocument"/>.
            </summary>
            <authorref id="dcazzulino"/>
            <progress amount="100"/>
            <remarks>
            When an <see cref="T:System.Xml.XPath.XPathNavigator"/> is created from an <see cref="T:System.Xml.XPath.XPathDocument"/>,
            it implements the <see cref="T:System.Xml.IXmlLineInfo"/> interface, which is used to gain
            access to the underlying node position.
            </remarks>
        </member>
        <member name="F:NMatrix.Schematron.XPathMatchedNodes._matched">
            <summary>
            The table contains an item for each line, and the item value
            is an instance of our <see cref="T:NMatrix.Schematron.Int32Collection"/> class for
            optimized value types storage.
            </summary>
        </member>
        <member name="M:NMatrix.Schematron.XPathMatchedNodes.#ctor">
            <summary>Initializes an instance of the class.</summary>
        </member>
        <member name="M:NMatrix.Schematron.XPathMatchedNodes.IsMatched(System.Xml.XPath.XPathNavigator)">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.IsMatched(System.Xml.XPath.XPathNavigator)"/>.</summary>
        </member>
        <member name="M:NMatrix.Schematron.XPathMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.AddMatched(System.Xml.XPath.XPathNavigator)"/>.</summary>
        </member>
        <member name="M:NMatrix.Schematron.XPathMatchedNodes.Clear">
            <summary>See <see cref="M:NMatrix.Schematron.IMatchedNodes.Clear"/>.</summary>
        </member>
    </members>
</doc>
