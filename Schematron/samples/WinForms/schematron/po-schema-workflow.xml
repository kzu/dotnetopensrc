<?xml version="1.0" encoding="utf-8" ?>
<schema xmlns="http://www.ascc.net/xml/schematron" 
	defaultPhase="orderPlaced">
  <title>Purchase Orders</title>
  <ns uri="http://example.com/po-schematron" prefix="po" />

	<phase id="orderPlaced">
		<active pattern="customerInfo" />
		<active pattern="orderInfo" />
	</phase>

	<phase id="orderPaid">
		<active pattern="customerInfo" />
		<active pattern="orderInfo" />
		<active pattern="paymentInfo" />
	</phase>

	<phase id="orderShipped">
		<active pattern="customerInfo" />
		<active pattern="orderInfo" />
		<active pattern="paymentInfo" />
		<active pattern="shipmentInfo" />
	</phase>

  <pattern name="Basic data" id="customerInfo">
    <rule abstract="true" id="sexTitle">
      <assert test="(@sex='Male' and @title='Mr') or (@sex='Female' and (@title='Mrs' or @title='Miss'))">
        Sex and title have incompatible values.
      </assert>
    </rule>

    <rule context="po:customer">
      <extends rule="sexTitle" />
      <report test="@customerId and @partnerId">
        Both customerId and partnerId can't be present.
      </report>
      <report test="not(@customerId) and not(@partnerId)">
        Either customerId or partnerId must be present.
      </report>
    </rule>
    
    <rule context="po:partner">
      <extends rule="sexTitle" />
      <!-- other extend/assert/report -->
    </rule>    
  </pattern>

  <pattern name="Orders data" id="orderInfo">
    <rule context="po:order[count(po:items/po:item) &gt; 100]">
      <assert test="@priority = 'Max'">
        An <name /> with more than two items must have a maximum priority.
      </assert>
      <report test="not(../@partnerId)">
        Only partners can place this type of order.
      </report>
    </rule>

    <rule context="po:order">
      <assert test="count(po:items/po:item/po:rebate) &lt;= 2">
        Up to two special rebates are allowed for each purchase order.
      </assert>
      <assert test="sum(po:items/po:item/po:rebate/@amount) &lt;= 30">
        The total discounted percentage can't be greater than 30%.
      </assert>
    </rule>
  </pattern>

  <pattern name="Payment consistency" id="paymentInfo">
    <rule context="po:order[@orderStatus='Paid']">
      <assert test="po:paymentInfo">
        Paid orders must include the payment information.
      </assert>
      <report test="po:cancelInfo">
        Cancelacion information can't be included for paid <name />.
      </report>
    </rule>

    <rule context="po:order[@orderStatus='Paid']/po:paymentInfo">
      <report test="@method='Card' and not(po:cardDetails)">
        If payment method is "Card", corresponding details must be given in a cardDetails element.
      </report>
      <report test="@method='Cheque' and not(po:chequeDetails)">
        If payment method is "Cheque", corresponding details must be given in a chequeDetails element.
      </report>
      <report test="@method='Cash' and (po:cardDetails or po:chequeDetails)">
        If payment method is "Cash", cardDetails or chequeDetails aren't applicable.
      </report>
    </rule>

    <rule context="po:order[@orderStatus='Cancelled']">
      <assert test="po:cancelInfo">
        Canceled orders must include the cancel information.
      </assert>
      <report test="po:paymentInfo">
        Payment information can't be included for canceled <name />.
      </report>
      <report test="po:cancelInfo/@reason='TiredOfWaiting' and po:cancelInfo/@isAngry='false'">
        If the customer got tired of waiting, he MUST be angry with us!
      </report>
    </rule>    
  </pattern>

  <pattern name="Shipment information" id="shipmentInfo">
    <!-- Other shipping information -->
  </pattern>

</schema>
